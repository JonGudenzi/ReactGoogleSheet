{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Date","setDate","Freight_Company","setFreight_Company","TotalBoxNumber","setTotalBoxNumber","VendorName","setVendorName","Container","fluid","className","Header","as","Form","onSubmit","e","preventDefault","objt","length","alert","axios","post","Field","value","placeholder","onChange","event","target","Button","color","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uSAmHeA,MA9Gf,WAEE,IAGA,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAgDA,OACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,YAA3B,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAX,kCACA,eAACC,EAAA,EAAD,CAAMH,UAAU,OAAOI,SA7CN,SAACC,GACpBA,EAAEC,iBAEF,IAAMC,EAAO,CACXjB,KAAMA,EACNE,gBAAiBA,EACjBE,eAAgBA,EAChBE,WAAYA,GAEZL,EAAQ,IACRE,EAAmB,IACnBE,EAAkB,IAClBE,EAAc,IAeI,IAAhBP,EAAKkB,OACPC,MAAM,6BAE4B,IAA3BjB,EAAgBgB,OACvBC,MAAM,6CAE2B,IAA1Bf,EAAec,OACtBC,MAAM,kCAnBNC,IACGC,KACC,qEACAJ,GAGFG,IACOC,KADP,6CAjCO,mCAiCP,kBAhCS,mEAgCT,iDAE+Gf,IAejHa,MAAM,cAON,UACE,eAACN,EAAA,EAAKS,MAAN,WACE,yCACA,uBACAC,MAAOvB,EACLwB,YAAY,aACZC,SAvDgB,SAACC,GACzBzB,EAAQyB,EAAMC,OAAOJ,aA0DjB,eAACV,EAAA,EAAKS,MAAN,WACE,oDACA,uBACAC,MAAOrB,EACLsB,YAAY,wBACZC,SAAU,SAACV,GAAD,OAAOZ,EAAmBY,EAAEY,OAAOJ,aAKjD,eAACV,EAAA,EAAKS,MAAN,WACE,gDACA,uBACAC,MAAOnB,EACLoB,YAAY,yBACZC,SAAU,SAACV,GAAD,OAAOV,EAAkBU,EAAEY,OAAOJ,aAIhD,eAACV,EAAA,EAAKS,MAAN,WACE,gDACA,uBACAC,MAAOjB,EACLkB,YAAY,oBACZC,SAAU,SAACV,GAAD,OAAOR,EAAcQ,EAAEY,OAAOJ,aAG5C,cAACK,EAAA,EAAD,CAAQC,MAAM,OAAOC,KAAK,SAA1B,2BCzFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.44122a07.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Container, Header, } from 'semantic-ui-react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n\n  let APIkey = \"48f7b748bbe946f9ada9ffd9fad114ab\";\n  let APItoken = \"8ae340536776d2736422804003b661708a5fd174b18f7d88d7b6dd95f771233c\";\n\n  const [Date, setDate] = useState('');\n  const [Freight_Company, setFreight_Company] = useState('');\n  const [TotalBoxNumber, setTotalBoxNumber] = useState('');\n  const [VendorName, setVendorName] = useState('');\n  \n  const dateChangeHandler = (event) => {\n    setDate(event.target.value);\n};\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const objt = { \n      Date: Date,\n      Freight_Company: Freight_Company, \n      TotalBoxNumber: TotalBoxNumber ,\n      VendorName: VendorName};\n\n      setDate('');\n      setFreight_Company('');\n      setTotalBoxNumber('');\n      setVendorName('');\n\n    const postToAPIS = () => {\n      axios\n        .post(\n          'https://sheet.best/api/sheets/43b98d36-2257-422f-b1ee-60a1a2f1b568',\n          objt\n        );\n\n        axios\n              .post(\n                `https://api.trello.com/1/cards?key=${APIkey}&token=${APItoken}&idList=6183456a546264705e648406&name=${VendorName}`\n              );\n      };\n\n    if (Date.length === 0) {\n      alert('You are missing the Date!');\n    }\n    else if (Freight_Company.length === 0) {\n      alert('You are missing the Freight Company Name!');\n    }\n    else if (TotalBoxNumber.length === 0) {\n      alert('Please provide how many boxes');\n    }\n    else {\n      postToAPIS(); \n      alert('Success!');\n    }\n  };\n\n  return (\n    <Container fluid className=\"container\" >\n      <Header as=\"h1\">IE Incoming Shipment</Header>\n      <Form className=\"form\" onSubmit={handleSubmit}>\n        <Form.Field>\n          <label>Date</label>\n          <input\n          value={Date}\n            placeholder=\"Enter Date\"\n            onChange={dateChangeHandler}\n          />\n        </Form.Field>\n\n        <Form.Field >\n          <label>Freight Company</label>\n          <input\n          value={Freight_Company}\n            placeholder=\"Enter Freight Company\"\n            onChange={(e) => setFreight_Company(e.target.value)}\n            \n          />\n        </Form.Field>\n\n        <Form.Field>\n          <label>Total Boxes</label>\n          <input\n          value={TotalBoxNumber}\n            placeholder=\"Enter Total Box Amount\"\n            onChange={(e) => setTotalBoxNumber(e.target.value)}\n          />\n        </Form.Field>\n        \n        <Form.Field>\n          <label>Vendor Name</label>\n          <input\n          value={VendorName}\n            placeholder=\"Enter Vendor name\"\n            onChange={(e) => setVendorName(e.target.value)}\n          />\n        </Form.Field>\n        <Button color=\"blue\" type=\"submit\" >\n          Submit\n        </Button>\n\n      </Form>\n      \n    </Container>\n    \n  );\n\n  \n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}